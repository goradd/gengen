package {{.package}}

type {{.KeyType}}{{.ValType}}Getter interface {
	Get(key {{.keytype }}) (val {{.valtype}})
}

// The {{.KeyType}}{{.ValType}}MapI interface provides a common interface to the many kinds of similar map objects.
type {{.KeyType}}{{.ValType}}MapI interface {
	SetChanged(key {{.keytype}}, val {{.valtype}}) (changed bool)
	Set(key {{.keytype}}, val {{.valtype}})
	Get(key {{.keytype}}) (val {{.valtype}})
	Has(key {{.keytype}}) (exists bool)
	Delete(key {{.keytype}})
	Values() []{{.valtype}}
	Keys() []{{.keytype}}
	Len() int
	Clear()
	// Range will iterate over the keys and values in the map. Pattern is taken from sync.Map
	Range(f func(key {{.keytype}}, value {{.valtype}}) bool)
	Merge(i {{.KeyType}}{{.ValType}}MapI)
}
